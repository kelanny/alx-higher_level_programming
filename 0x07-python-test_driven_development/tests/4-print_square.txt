# tests/test_print_square.txt

"""
Module Documentation
-------------------
This module provides a function to print a square with the character #.

Function Documentation
----------------------
def print_square(size):
    Prints a square with the character #.

    :param size: The size length of the square.
    :type size: int
    :raises TypeError: If size is not an integer.
    :raises ValueError: If size is less than 0 or a float less than 0.

"""

# Test Case 1: Valid input, size 
>>> print_square = __import__("4-print_square").print_square
>>> print_square(3)
###
###
###
>>> # Expected Output:
###   <-- Three rows with three # characters each

# Test Case 2: Valid input, size = 1
>>> print_square(1)
#
>>> # Expected Output:
#    <-- One row with one # character

# Test Case 3: Valid input, size = 0
>>> print_square(0)
>>> # Expected Output: (Empty)

# Test Case 4: Invalid input, size is a float
>>> print_square(2.5)
Traceback (most recent call last):
    ...
TypeError: size must be an integer

# Test Case 5: Invalid input, size is a negative integer
>>> print_square(-2)
Traceback (most recent call last):
    ...
ValueError: size must be >= 0

# Test Case 6: Invalid input, size is a negative float
>>> print_square(-3.5)
Traceback (most recent call last):
    ...
TypeError: size must be an integer

# Test Case 7: Invalid input, size is a string
>>> print_square("4")
Traceback (most recent call last):
    ...
TypeError: size must be an integer

# Test Case 8: Invalid input, size is None
>>> print_square(None)
Traceback (most recent call last):
    ...
TypeError: size must be an integer

# Test Case 9: Invalid input, size is a list
>>> print_square([2])
Traceback (most recent call last):
    ...
TypeError: size must be an integer

# Test Case 10: Invalid input, size is a tuple
>>> print_square((3,))
Traceback (most recent call last):
    ...
TypeError: size must be an integer
